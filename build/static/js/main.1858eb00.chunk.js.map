{"version":3,"sources":["components/Note.js","services/notes.js","services/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAmBeA,G,MAjBF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEdC,EAAQF,EAAKG,UACf,qBAAuB,iBAG3B,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,S,gBCVpCK,EAAU,aAqBD,EAlBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgB5B,EAZA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAU5B,EANA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCF5BK,EAdM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKd,UAAU,QAAf,SACGc,KCWQC,EAjBA,WAOb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GC0FSC,EA9FH,SAACC,GAAW,IAAD,EAEKC,mBAAS,IAFd,mBAEdC,EAFc,KAEPC,EAFO,OAGSF,mBAAS,IAHlB,mBAGdG,EAHc,KAGLC,EAHK,OAISJ,oBAAS,GAJlB,mBAIdK,EAJc,KAILC,EAJK,OAKmBN,mBAAS,MAL5B,mBAKdO,EALc,KAKAC,EALA,KASrBC,qBAAU,WACRC,IAEG1B,MAAK,SAAA2B,GACJT,EAASS,QAEZ,IAGH,IA2CMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAvC,GAAI,OAAuB,IAAnBA,EAAKG,aAE9B,OAEE,gCACE,uCACA,cAAC,EAAD,CAAce,QAASe,IACvB,8BACE,yBAAQ3B,QAAS,kBAAM0B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAACxC,EAAMyC,GAAP,OACf,cAAC,EAAD,CACEzC,KAAMA,EAENC,iBAAkB,YA/CD,SAACc,GAE1B,IAAMf,EAAO2B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,KAChC6B,EAAW,2BAAQ5C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDiC,EACUrB,EAAI6B,GACXlC,MAAK,SAAAmC,GACJjB,EAASD,EAAMa,KAAI,SAAAxC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO6C,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,SAAD,OACJlC,EAAKK,QADD,0CAGf2C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAE5B,KAAOA,SA8BNkC,CAAmBjD,EAAKe,MAD7C0B,QAGX,uBAAMS,SAhEM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBhD,QAASwB,EACTyB,MAAM,IAAIC,MAAOC,cACjBrD,UAAWsD,KAAKC,SAAW,IAE7BtB,EACUiB,GACP3C,MAAK,SAAAmC,GACJjB,EAASD,EAAMgC,OAAOd,IACtBf,EAAW,QAqDb,UACE,uBACE8B,MAAO/B,EACPgC,SA7BiB,SAACV,GACxBW,QAAQC,IAAIZ,EAAMa,OAAOJ,OACzB9B,EAAWqB,EAAMa,OAAOJ,UA4BpB,wBAAQK,KAAK,SAAb,qBAEF,cAAC,EAAD,QCzFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.1858eb00.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n\r\n\r\n}\r\n\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update }\r\n\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Notification","import React from 'react'\r\n\r\n\r\nconst Footer = () => {\r\n\r\n  const FooterStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={FooterStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Footer","import React, { useState, useEffect } from \"react\"\nimport './App.css'\n// import axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './services/Notification'\nimport Footer from './components/Footer'\n\n\nconst App = (props) => {\n\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    }\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote(\"\")\n      })\n  }\n\n  const toggleImportanceOf = (id) => {\n\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from the server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  return (\n\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note\n            note={note}\n            key={i}\n            toggleImportance={() => { toggleImportanceOf(note.id) }} />)}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}